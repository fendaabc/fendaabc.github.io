<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>程序员如何把控自己的职业</title>
      <link href="2020/11/28/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E6%8A%8A%E6%8E%A7%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8C%E4%B8%9A/"/>
      <url>2020/11/28/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E6%8A%8A%E6%8E%A7%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="程序员如何把控自己的职业"><a href="#程序员如何把控自己的职业" class="headerlink" title="程序员如何把控自己的职业"></a>程序员如何把控自己的职业</h1><h5 id="转载-2020年08月07日-陈皓"><a href="#转载-2020年08月07日-陈皓" class="headerlink" title="转载: 2020年08月07日 陈皓"></a>转载: <a href="https://coolshell.cn/articles/20977.html" title="17:31">2020年08月07日</a> <a href="https://coolshell.cn/articles/author/haoel" title="View all posts by 陈皓">陈皓</a></h5><img width="196" height="300" src="https://i.loli.net/2020/11/28/hIBGdaOWgXmJFq9.png" style="zoom:80%;" /><p>这篇文章的主要内容主要是我今年3月份在腾讯做的直播，主要是想让一些技术人员对世界有一个大体的认识，并且在这个认识下能够有一个好的方法成就自己。而不是在一脸蒙圈的状态下随波逐流，而日益迷茫和焦虑。直播完后，腾讯方面把我的直播形成文字的形式发了出来，我觉得我可以再做一个精编版。所以，有了这篇文章，希望对大家有帮助。</p><p>对我来说，在我二十多年的工作经历来看，期间经历了很多技术的更新换代，整个技术模式、业务模式也是一直变来变去，我们这群老程序员成长中所经历的技术比今天的程序员玩的还更杂更多。我罗列一下我学过的，而且还被淘汰掉的技术，大家先感受一下。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>MIS应用开发：FoxPro，PowerBuilder，Delphi</span><br><span class="line"><span class="bullet">- </span>OA：Lotus Notes，VBScripts</span><br><span class="line"><span class="bullet">- </span>微软：ODBC/ADO，COM/DCOM，MFC/ATL，J++</span><br><span class="line"><span class="bullet">- </span>服务器：AIX，HP-UX，SCO Unix</span><br><span class="line"><span class="bullet">- </span>Web：CGI，ISAPI，SOAP</span><br><span class="line"><span class="bullet">- </span>RPC：CICS，Tuxedo</span><br><span class="line"><span class="bullet">- </span>J2EE：Websphere，Weblogic</span><br><span class="line"><span class="bullet">- </span>DB：Sybase，Informix </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我想说的是，无论过去还是今天，我们这些前浪和你们后浪所面对的技术的挑战和对技术的焦虑感是相似的，我们那个时候不但玩996，还玩封闭开发（就是一周只能回家一天）。当然，唯一好的东西，就是比起今天的程序员来说，我们那个年代没有像微信、微博、知乎，抖音这些巨大消耗你人生的东西，所以，我们的工作、生活和成长都有很效率，不会被打断、喜欢看书、Google还没有被封……当然，那时代没有StackOverlow和Github这样的东西，所以，能完成的东西或质量都一般。</p><p>当然，这里并不是想做一个比较，只是想让大家了解一下两代程序员间的一些问题各有千秋，大同小异。在整个成长过程中，其实有很多东西是相通的，其本上来说，就是下面的三件事——</p><p><strong>第一</strong>，如果想要把控技术，应对这个世界的一些变化，<strong>需要大致知道这个世界的一些规律和发展趋势，另外还得认识自己</strong>，自己到底适合做什么？在这个趋势和规律下属于自己的发挥领域到底是什么？这是我们每个人都需要了解的。</p><p><strong>第二</strong>，<strong>打牢基础，以不变应万变</strong>，不管世界怎样变化，我都能很快适应它。基础的重要程度对于你能够飞多高是相当有影响的，懂原理的人比不懂原理的人能做出来的事情或是能解决的问题完全是两个层级的。</p><p><strong>第三，提升成长的效率</strong>，因为现在社会的节奏实在太快了，比二十年前快得太多，技术层出不穷，所以我们的成长也要更有效率。效率并不单指的快，效率是怎么样更有效，是有用功除以总功（参看《<a href="https://coolshell.cn/articles/10217.html" title="加班与效率">加班与效率</a>》），怎么学到更有效的东西，或者怎么更有效学习，是我们需要掌握的另一关键。</p><p>下面是我这多年来的一些认识，希望对你有帮助。</p><p>目录</p><ul><li><a href="#%E4%B8%96%E7%95%8C%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF" title="世界发展趋势">世界发展趋势</a></li><li><a href="#%E4%BA%BA%E6%89%8D%E9%9C%80%E6%B1%82" title="人才需求">人才需求</a></li><li><a href="#Google%E8%AF%84%E5%88%86%E5%8D%A1" title="Google评分卡">Google评分卡</a></li><li><a href="#%E8%AE%A4%E8%AF%86%E8%87%AA%E5%B7%B1" title="认识自己">认识自己</a></li><li><a href="#%E6%89%93%E5%A5%BD%E5%9F%BA%E7%A1%80" title="打好基础">打好基础</a></li><li><a href="#%E5%AD%A6%E4%B9%A0%E6%95%88%E7%8E%87" title="学习效率">学习效率</a></li><li><a href="#%E5%B0%8F%E7%BB%93" title="小结">小结</a></li></ul><h4 id="世界发展趋势"><a href="#世界发展趋势" class="headerlink" title="世界发展趋势"></a>世界发展趋势</h4><p><strong>我个人经历的信息化革命应该分成三个阶段：</strong></p><ul><li><strong>1990年代到2000年，这个时代MB时代</strong>，是雅虎、新浪、搜狐、网易门户网站的时代，这个时代就是ISP/ICP互联网提供商，把一些资讯数字化，然后发布到网络上。</li><li><strong>2000年到2010年，这个时代叫GB时代，或是叫多媒体或UGC时代</strong>，上网开始变得普遍了，每个人手里的数码设备开始变得多了起来，可以上传照片，可以上传视频，甚至可以在网上做社交。</li><li><strong>2010年到2020年，这个时代叫TB时代，这过去的十年是移动互联网时代</strong>，移动互联网只需要手机在线，不需要依靠电脑。因为手机随时在线，所以个人的各种各样的数据始终在被收集，只要用户上网就会产生数据，所以人的行为最终也被数字化了。</li></ul><p>所有的硬件和软件都是跟着需要处理的数据而演进的，我们需要更大的带宽，更大的硬盘，更多的处理器……大到一定时候就只能进入分布式化的技术架构了，再大，数据中心也顶不住了，就会要引入更为分布式的边缘计算了。</p><p>另一方面，从业务上来看，<strong>我们可以看到整个世界就在不断地进行数字化，因为，只要数字化了，就可以进行复制传播和计算，只要可以进行计算了，就可以进行数学建模，就可以自动化，只要可以自动化了就可以规模化，只要可能规模化了，就可以改变整个行业</strong>。人类的近代史的大趋势基本上都是在解决能源和自动化的事，源源不断的能源是让机器不知疲倦的前提条件，用机器代替牲口，代替人类进行工作是规模化的前提条件。</p><p>所以，<strong>技术的演进规律基本是自动化加规模化，从而降低成本，提升效率</strong>。这就是为什么世界变得越来越快，人类都快跟不上节奏的原因，主要是整个社会不断被机器、数据所驱动。</p><h4 id="人才需求"><a href="#人才需求" class="headerlink" title="人才需求"></a>人才需求</h4><p>在这个过程中，需要什么样的人？下面是我的一些认识——</p><ul><li><strong>技工</strong>，在机器和自动化面前，肯定是需要能够操作机器的技术工人了，这类人是有技术的劳动力。在编程的圈子里俗称“码农”，他们并不是真正的工程师，他们只是电脑程序的操作员，所以，<strong>随着技术门槛的下降或是技术形式的变更他可能就会变得越来越不值钱，直到被淘汰掉</strong>。</li><li><strong>特种工</strong>，这种人是必须了解原理和解决难题的一类人，他们是解决比较难的、特定的一些技术问题。<strong>当一种技术被淘汰，他并不容易被淘汰，因为他懂原理，原理就是解决问题的能力，是解决问题的套路和方法</strong>。</li><li><strong>工程师</strong>，不但是使用技术，还可以把活儿做好，他们认为代码更多的时间是在维护，这些人使用各种各样的手段和各种技术，精益求精地持续不断地提高代码的易读性、扩展性、可维护性和重用性，这个过程似乎永无止境。对于这些有“洁癖”，有“工匠精神”，有“修养”的技术人员，我们称他们为工程师。<strong>这种人做事又稳又快，而且可以做出很多称手的工具和方法论</strong>。</li><li>再往上是<strong>设计师和架构人员</strong>，这些人主要是开发一些工具，框架，模式，提升软件开发和维护效率，同时也提升用户体验，和提升稳定性、性能、代码重用等，总的来说就是为了降本增效。这类人的工作降低了技术得到门槛，他们把技术门槛降低了以后，就可以把这个技术普及开来，就可以由广大劳工、技工、特殊工人使用了。</li><li>还有一类人是<strong>经理</strong>，经理主要是组织团队、完成项目、创造利润。这类人中，即有身先士卒的leader，也有高高在上的boss，但无论怎么样，这些人只不过是为了让一个公司或是一个团队更好组织在一起的“粘合剂”，这类人只有在大公司中才会变成更有价值。</li></ul><p>这就是我总结的世界需要哪些人才，我们了解这些东西以后大概就明白我们现在所处的位置有什么样的问题，我们应该去什么样的地方。</p><h4 id="Google评分卡"><a href="#Google评分卡" class="headerlink" title="Google评分卡"></a>Google评分卡</h4><p>接下来，我们再来看看Google的SRE的自我评分卡：</p><blockquote><p>0 – 对于相关的技术领域还不熟悉<br>1 – 可以读懂这个领域的基础知识<br>2 – 可以实现一些小的改动，清楚基本的原理，并能够在简单的指导下自己找到更多的细节。</p><p>3 – 基本精通这个技术领域，完全不需要别人的帮助<br>4 – 对这个技术领域非常的熟悉和舒适，可以应对和完成所有的日常工作。</p><ul><li>对于软件领域 – 有能力开发中等规模的程序，能够熟练和掌握并使用所有的语言特性，而不是需要翻书，并且能够找到所有的冷知识。</li><li>对于系统领域 – 掌握网络和系统管理的很多基础知识，并能够掌握一些内核知识以运维一个小型的网络系统，包括恢复、调试和能解决一些不常见的故障。</li></ul><p>5 – 对于该技术领域有非常底层的了解和深入的技能。</p><p>6 – 能够从零开发大规模的程序和系统，掌握底层和内在原理，能够设计和部署大规模的分布式系统架构<br>7 – 理解并能利用高级技术，以及相关的内在原理，并可以从根本上自动化大量的系统管理和运维工作。<br>8 – 对于一些边角和晦涩的技术、协议和系统工作原理有很深入的理解和经验。能够设计，部署并负责非常关键以及规模很大的基础设施，并能够构建相应的自动化设施</p><p>9 – 能够在该技术领域出一本经典的书。并和标准委员会的人一起工作制定相关的技术标准和方法。<br>10 – 在该领域写过一本书，被业内尊为专家，并是该技术的发明人。</p></blockquote><p>SRE需要自评如下这些技术或技能。</p><blockquote><p>– TCP/IP Networking (OSI stack, DNS etc)<br>– Unix/Linux internals<br>– Unix/Linux Systems administration<br>– Algorithms and Data Structures<br>– C/C++<br>– Python<br>– Java<br>– Perl<br>– Go<br>– Shell Scripting (sh, Bash, ksh, csh)<br>– SQL and/or Database Admin<br>– Scripting language of your choice (not already mentioned) _____________<br>– People Management<br>– Project Management</p></blockquote><p>这个评分卡是面试Google前需要候选人对自己的各种技术进行自评，也算是一种技术人员的等级的度量尺，其把技术的能分成11个等级，我用颜色把其它成四大层级，希望这个评份卡能够给你一个能力提升的参考标准。</p><h4 id="认识自己"><a href="#认识自己" class="headerlink" title="认识自己"></a>认识自己</h4><p>认识了世界是怎么发展的，也知道技术人员的种类和层级，那么还要了解一下自己，因为如果不了解自己，那么你也无法找到自己的路和适合自己的地方。</p><p>我觉得，一个人要认识自己就需要认识自己的特长、兴趣、热情、擅长等，下面是一个认识自己的标准方法：</p><ul><li><strong>特长</strong>。首先你要找得到自己特长。你要认识自己的特长，找到自己的天赋，找到你在DNA里比别人强的东西，就拿你的DNA跟别人竞争就好了。所以你要找到自己可以干成的事，找到别人找你请教的事，你身边人找你请教就是说明你有特长。这是找到自己特长非常非常重要，扬长避短。</li><li><strong>兴趣</strong>。如果你没有找到自己特长，就找自己有兴趣有热情的东西。什么叫兴趣？兴趣是再难再累都不会放弃的事。如果你遇到困难就会放弃不叫兴趣，那叫叶公好龙。不怕困难，痴迷其中，就算你没有特长，有了这种特质，你也是头部的人才。</li><li><strong>方法</strong>。如果你没有特长，没有兴趣和热情就要学方法。这种方法就是要有时间观念，要会做计划，要懂统筹、规划对于做过的事情，犯过的错误多总结，举一反三，喜欢自己找答案，自己探究因果关系，这是一些方法，自己总结一些套路。</li><li><strong>勤奋。</strong>如果你没有特长，没有兴趣，也没有方法，你还能做的事就是勤奋，勤奋注定会让你成为一个比较劳累的人，也是很有可能被淘汰的人随着你的年纪越来越大，你的勤奋也会越来越不值钱。因为年轻人会比你更勤奋，比你更勤奋、比你斗志更强，比你能力更强，比你要钱更少的人会出现。勤奋最不值钱，但是只要你勤奋至少能够自食其力。</li></ul><p>以上就是为了应对未来技术变化，作为个人必须要从特长、兴趣、方法一层一层筛选挖掘，<strong>如果没有这些你就要努力和勤奋。就只能接受“福报”了</strong>。</p><p>从我个人而言，我不算是特别聪明的人，但自认为对技术还是比较感兴趣的，难的我不怕。有很多比较难啃的技术，聪明点的人啃一个月就懂了，我不行，我可能啃半年。但是没有关系，知识都是死的，只要不怕困难总有一天会懂的。最可怕是畏难，为自己找借口，这样就不太好了。</p><h4 id="打好基础"><a href="#打好基础" class="headerlink" title="打好基础"></a>打好基础</h4><p>最前面提到我学的各式各样的被淘汰的技术，会让你感觉很迷茫，或是迷失。但前面也提到了“谷歌评分卡”，在这个评分卡中，我们看到了许多基础原理方面的内容，其实要应对未来的变化，很重要的一点就是无招胜有招，以不变应万变。</p><p><strong>变化都是表面的东西，内在的东西其实并没有太多的变化</strong>。理论层面上变得不多，反而形式上的东西今天一个花样，明天一个花样，所以如果要去应对这种变化，就一定要打牢自己的基础，提升内功修养。比如像编程的一些方式和套路，修饰模式原理本质，解耦，提升代码的重用度等。提升代码重用度必须解耦，要跟现实解耦，提升抽象，这些都是一些技术基础。无论用什么语言，都是这么做的。</p><p>打牢基础就可以突破瓶颈，不打牢基础没有办法突破瓶颈。<strong>在技术世界不要觉得量变会造成质变，这是不可能的</strong>。技术这个东西就像搞建筑砌砖头，砌砖头砌的再多也不可能让你能成为一个架构师的，因为你<strong>不懂原理，不懂科学方法，你就不可能成长上去的</strong>，就像学数学一样，当你掌握了微积分这种大杀器后，你解题的能力是无所披靡，而微积分这种方式绝对不是你能“量变”出来的。</p><p>所以你必须学习基础的理论知识，如果不学这些基础理论知识，还要学习解题思路和方法，如果你只学在表面，那么当这个技术的形式有变化，就会发现以前学的都没用了，要重头学一遍。<strong>掌握技术基础可以让自己找到答案和知识，基础是抽象和归纳，很容易形成进一步的推论</strong>。我们学的很多技术实现都逃不脱基础原理，不管是Java，还是其他语言，只要用TCP用的都是相同的原理，逃不出范围，<strong>只要抓住原理，举一反三，时间一长了，甚至还可以自己推导答案</strong>。对于技术的基础，我会把其它成四类：</p><ul><li><strong>程序语言</strong>：语言的原理，类库的实现，编程技术（并发、异步等），编程范式，设计模式……</li><li><strong>系统原理</strong>：计算机系统，操作系统，网络协议，数据库原理……</li><li><strong>中间件</strong>：消息队列，缓存系统，网关代理，调度系统 ……</li><li><strong>理论知识</strong>：算法和数据结构，数据库范式，网络七屋模型，分布式系统……</li></ul><p><strong>这些知识其实就是一个计算机科学专业的学生他所要学习的原理</strong>，但可惜的是，我们的一些学校教得也很糟糕，不但老师能力不足，而且放着世界上最优秀的教课书不用了，一定要自己写一本。讲也讲不全，还有各种错误，哎……总之，如果你学习用用到的教材不行，那么可以肯定的是你的学习效率一定是很糟糕的。这就是为什么我们大学上完了，还是跟个傻瓜一样，还要在工作中再重新自学。</p><p>不过，就算自学，这些基础技术大概需要四五年的时间堆叠。<strong>我工作二十年了，这二十年来基本还是这些原理没变，无论形式怎么变，但是核心永远还是这些，理论创新很难，这是以不变应万变</strong>。</p><h4 id="学习效率"><a href="#学习效率" class="headerlink" title="学习效率"></a>学习效率</h4><img width="384" height="361" src="https://i.loli.net/2020/11/28/DRxabvSh4WQFigY.jpg" style="zoom:80%;" /><p>谈到学习效率，就需要拿出这张学习金字塔的图来了。从图可以看到学习方法分布两层，一种是被动学习，也是浅度学习，听讲，阅读，视听，演示都是在被动学习，而与人讨论，自己动手实践，教授给别人是主动学习。主动学习我们称之为深度学习，如果你不能深度学习，你就不能真正学到东西。这也是你会经常有“学那么多干什么，不用就忘了”，这就是浅度学习的症状了。</p><p>下面，我给出一些我自己觉得不错的学习经验：</p><p><strong>1、挑选一手知识和信息源。</strong>对于学习方法：第一我们一定要到知识源去挑选知识，知识信息源非常关键，二手信息丢失太大了，谭浩强写的书就丢失太多信息了。<strong>目前计算机一手知识基本都是国外的</strong>，所以<strong>英文非常重要</strong>。我鼓励大家一定读第一手的资料。如果你英语有问题，至少要看翻译过来，最好是原汁原味翻译的，不要我理解了给你讲那种，那种也是被别人嚼一遍再讲给你你没有体会，是别人带着你，别人的体会会影响你，也许你的体会会比他更好，因为是你自己总结出来的东西，所以知识源很重要。</p><p><strong>2、注意原理和基础</strong> <strong>第二要注重基础原理</strong>。虽然可以忘记这个技术，但是原理记在心里，我可以徒手实现出来，而且通过原理可以更快学习其他类似的技术。所以原理很重要！当你学会C、C++要学Java和GO都很快。</p><p><strong>3、使用知识图谱</strong> <strong>一定要学会使用知识图</strong>，把知识结构化。从一个技术关键点开始不断地关联和细化下去，比如：关于TCP协议，首先第一个要记住状态图，怎么建立连接，怎么断连接，状态怎么变迁。TCP没有连接，是靠状态维护连接的。其次，要了解TCP怎么保证可靠性，就是丢包以后怎么重传，重传有哪些技术点。然后，重传会让你联想到拥塞控制，拥塞控制到滑动窗口……。这基本就是TCP的所有东西了，找到关键点，然后顺着这个脉络一点点往下想，通过知识图关联就可以进行顺藤摸瓜。我们不需要记所有知识，那些<strong>手册的知识不需要记，你知道在哪里能找到就可以了</strong>。你脑子里面要有地图，学一个东西就跟在城市生活一样，闭上眼睛就知道地图，A点到B点怎么去大概方向要知道。我在北京我去广州，广州在南边，我大概坐飞机还是火车要心里有数。。</p><p><strong>4、学会举一反三</strong>。就是用不同方法学一个东西，比如说学TCP协议，看书是一种方法，编程是另外一种方法，还有用做Debug去看的，用不同方法学一个东西会让你更加熟悉，你学一个知识的同时把周边也学了。比如说学前端能不能把HTTP学一下，比如说长连接、短连接，包括hp1、hp2有一些不一样的东西。</p><p><strong>5、总结和归纳。</strong>只有学会总结和归纳，才能形成自己的思维框架、自己的套路、自己的方法论，以后学这个东西应该怎么学。就像学一门新的语言，不管GO语言，还是Rust语言，第一件事情就是了解内存是怎么管理的，数据类型什么样，第二是泛型怎么搞，第三是并发怎么弄。还有一些抽象怎么弄，比如说怎么解耦，怎么实现多态？套路这种东西只有学的多了以后才能形成套路，如果你只学会一门语言不会有套路，你要每年学门语言，不用学多精，你思考这个语言有什么不一样，为什么这个这种有玩法，那个有那种玩法，这些东西思考多了套路方法论就出来了。比如说Windows和Linux有什么不同，Linux和Unix又有什么不同？只有总结自己的框架、套路和方法，这些才永远不会被淘汰。</p><p><strong>6、实践和坚持。</strong>剩下就是多做多练，多坚持，只有实践才会有经验，只有锻炼了才能够把自己的脂肪变没，所以，<strong>要把知识变成技能必须练</strong>，就像小学生学会加减乘除，还是要演练，必须多做题，题目做得多了，自然掌握得好。要挑选好的知识源，注重原理技术，有一些原理的基础的书太枯燥，但是我告诉你学习这些基础太值得投入时间，搬砖赚几十元不值得，因为赚的是辛苦钱，老了就赚不了，必须要赚更有能力的钱，这是学习投资。</p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>好了，该到这篇文章收尾的时候了，小结一下，如果你想更好的把握时代，提升自己，你需要知道这个时代的趋势是什么，需要什么样的人，这些人需要什么样的能力，这些能力是怎么获得的，投入到基础知识的学习就像“基建”一样，如果基础不好，不能长高，学习能力也是需要适应这个快速时代的重要的基础能力，没有好的学习能力，很快就会掉队被淘汰。</p><p>这些东西，是我从业二十年来的总结和体会，希望对你有用。</p><p>（全文完）</p><p><img src="https://i.loli.net/2020/11/28/vnUIWra5ktu3ZmE.jpg" style="zoom:67%;" /> <img src="https://i.loli.net/2020/11/28/UMAHDs2Z4RzOgT1.jpg" style="zoom:67%;" /><br>关注CoolShell微信公众账号和微信小程序</p><p><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Toots 2020 Nov.23 - Nov.29</title>
      <link href="2020/11/23/Toots-2020-Nov.23-Nov.29/"/>
      <url>2020/11/23/Toots-2020-Nov.23-Nov.29/</url>
      
        <content type="html"><![CDATA[<p><strong>Nov.23</strong></p><hr><ul><li><p>遇到问题为什么要哭,哭有什么用</p><p>可是,哭本来就不是用来解决问题的~    </p><p>#电报频道</p></li><li><p>有时父母和小孩的某些情感连接真的很神奇，即便不在一起父母好像都能感知到你的喜怒哀乐，在你状态糟糕的时候就能收到妈妈问的一句“最近还好吗？”</p><p>我不是一个经常会主动联系家人的人，倒也不是不记挂，只是好像骨子里有些疏离，即便是家人，我也很少去主动拉进距离。</p><p>妈妈今天打来电话，问我在做些什么，最近课多不多，吃得如何。我一一回答，然后妈妈问我“你最近还好吗？”当下好像全身的血液滞住了，我说“嗯，挺好的。”不过其实一直也不大好，但妈妈问我这一句的时候我想她一定有感觉到些什么吧，这种感觉很奇妙，好像血浓于水的同时情感也彼此联通一般。</p><p>想起今年暑假的时候，我像一摊烂泥，一团乱麻，过的特别糟糕。那段时间不知道为什么，妈妈给我通电话也很多，总是让我多出去走走，多联系朋友，给自己买点衣服鞋子。有一次妈妈在电话里跟我说，你有什么都可以跟爸爸妈妈说的，我知道你不是一个外向的爱说的小孩，但也不要压抑自己。听到的一瞬间我就开始止不住地掉眼泪，我把手机拿远，拿着纸捂住鼻子嘴巴不要哭出声音，怕自己说话会被妈妈发现在哭，就只是闷闷的回答“嗯。”</p><p>“你想吃什么吗？”妈妈轻轻地问我，“想吃我就给你买。”我说没什么想吃的呢，妈妈说，那你自己在学校好好吃饭，注意身体啊。</p><p>“你看你，我不给你打电话你就不会打给我。”妈妈抱怨道。我沉默着，“以后没事也给我打电话聊聊天啊。”</p><p>我会尽量的妈妈，只是，我害怕自己会绷不住那根弦，我不想让你担心我呀，所以什么都不说就会让你觉得我过得挺好的，我也希望你们觉得我挺好的。</p><p>谢谢你啊妈妈。   </p><p>#陌生人日记</p></li><li><p>心里没有了波涛汹涌,只是觉得心理突然空了,我不确定自己能用多少时间把你彻底忘了,也不敢保证我就能真的把你忘了,我只能像现在这样,不吵不闹,不悲不喜,安安静静的与你,再无任何交集.</p><p>#电报</p></li><li><p>最开始只是一句简单的争吵</p><p>他默不作声，希望与人为好</p><p>他们的眼神从轻蔑到好奇，再到兴致盎然</p><p>可怕，好像找到玩物的猎豹</p><p>他向身边的人倾诉，得到的安慰如此潦草</p><p>“为什么只有你被挑上了，别人都没事？！”</p><p>“忍一忍，等毕业就好”</p><p>老师说：孩子还小，难免小打小闹</p><p>父亲别过脸：别惹事，我们没钱，处理不了</p><p>母亲哭着说：忍一忍，学习最重要</p><p>算了，算了</p><p>不过是起了个不太好听的外号</p><p>不过是小小的造了个谣</p><p>不过是新年还没到，提前放了个鞭炮</p><p>他默不作声，怀疑着自己的感觉</p><p>剪头发，抽脸不过是同学开个玩笑，</p><p>当众脱衣只是同学帮助检查身体</p><p>被狠踹几脚只是他们没有把握好分寸</p><p>要怪只怪自己心态不好</p><p>可是怎么办呢</p><p>脸上的红肿经久不消</p><p>厕所聆听了他的每一次哀嚎</p><p>班长视若无睹知情不报</p><p>警惕着身后，生怕一个飞踹他就被踢倒</p><p>直到他拿起了手里的弹簧刀</p><p>起码让暴徒知道</p><p>他们的作为</p><p>不应该只是口头警告</p><p>父母不懂，那么乖的一个孩子怎么就变成了这样</p><p>老师将他赶出了学校：孩子思想太危险，不好管教</p><p>20年后，看着越来越多的校园霸凌报道</p><p>听着身边人的惋惜</p><p>庆幸自己的理智，不然只能出现在法制频道</p><p>父母惋惜着他的过往：当时再忍忍，拿到毕业证多好</p><p>他笑了笑</p><p>午夜梦回，大汗淋漓，噩梦做够一万次，也就习惯了？</p><p>作者：朱一旦的枯燥生活<br>来源：知乎<br>话题：校园霸凌</p></li></ul><p><strong>Nov.24</strong></p><hr><ul><li>如果他真的那么爱你,他会把你介绍进他的生活圈子里,不会连公开的勇气都没有,爱情本应该是一件公开 温暖的事情,何必委屈自己附和一段不见光的感情,你真正需要的是一个,灯光再亮也会抱住你的人</li><li>你低估了我想陪你走下去的决心,而我高估了我在你心理的位置,正如你是我患得患失的梦,而我是你可有可无的人,毕竟这穿越山河的剑,刺的都是用情至极的人</li><li>仗义每多屠狗辈,负心多是读书人</li><li>书籍的全部意义在于使人善用自己的孤独</li></ul><p><strong>Nov.25</strong></p><hr><ul><li>红雨随心翻作浪,青山着意化为桥</li></ul><p><strong>Nov.26</strong></p><hr><ul><li><p>好多人不开心了遇到难过的事情了会到李文亮医生的微博下面留言，顺带看看别人的留言互相鼓励一下，生活中最感动的莫过于这种来自陌生人的温暖和善意了吧</p></li><li><p>人的棱角慢慢消失,绝多数不是被眼前的丑恶给击碎的,而是被身后的愚昧和嘲弄给削平的.</p><p>若这个世界是一个大泥潭,有的人在里面打滚,脏的不亦乐乎,有的人身处最中央,致力于把身边的肮脏抹掉,却被视作疯子,而我只想拼尽全力爬出去,在泥潭的边缘冷眼旁观,我对这些污浊无能为力,只求自己能干净一点.</p><p>罗曼罗兰说过,世上只有一种英雄主义,即是认清生活本质后依然热爱生活.</p><p>调子起的太高,我自认为做不到,所以对于我们这些无名之辈,能够认清生活本质和生活和平共处,已是我们能做到最大的努力.</p><p>上帝的归上帝,撒旦的归撒旦,大概就是这</p></li></ul><p><strong>Nov.27</strong></p><hr><ul><li><img src="https://i.loli.net/2020/11/28/KhSTfFbLPuD8CA7.jpg" alt="daoli" style="zoom:67%;" /></li></ul><p><strong>Nov.28</strong></p><hr><ul><li>凡所有相,皆为虚妄.</li><li>不要虚掷你的黄金时代，不要去倾听枯燥乏味的东西，不要设法挽留无望的失败，不要把你的生命献给无知、平庸与低俗。</li></ul><p><strong>Nov.29</strong></p><hr><ul><li><p>好人之所以是好人，是因为他不做好事就活不下去；坏人之所以是坏人，是因为他不做坏事就活不下去。所以好人不需要夸奖，坏人不需要惩罚。好人做好事，是因为他心中有一种感情，做了好事才能去满足这种感情，如果不做好事，他会很难过。坏人同样的道理。所以没必要去分别对待，就像每个人的性格不同，大家都按照自己的个性去做相应的事。那么还何必去分对错呢？</p><p><strong>善只是善，不要讲结果，更不要根据当时的结果分大善和小善。你认为这件事是善，那就去做，即使别人不理解，那也无妨。毕竟对每个人来讲，善都是自己的私事。</strong></p><p>所以，关键是：<strong>你想不想善。想善并不意味着你是个好人，不想善也不并意味着你是个坏人。只是选择不同、活法不同而已。</strong></p><p><a href="http://www.zreading.cn/archives/7977.html">&lt;&lt;关于善，关键是：你想不想&gt;&gt;</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 句子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Toots_2020_Nov.22</title>
      <link href="2020/11/22/Toots-2020-Nov-22/"/>
      <url>2020/11/22/Toots-2020-Nov-22/</url>
      
        <content type="html"><![CDATA[<ul><li>心里没有了波涛汹涌，只是觉得心里突然空了，我不确定自己能用多少时间把你彻底忘了，也不敢保证我就能真的把你忘了，我只能像现在这样，不吵不闹，不悲不喜，安安静静的与你，再无任何交集。</li></ul><a id="more"></a><ul><li>如果他真的有那么爱你，他会把你介绍进他的生活圈子里，不会连公开的勇气都没有，爱情本应该是一件公开，温暖的事情，何必委屈自己去附和一段不见光的感情，你真正需要的是一个，灯光再亮也会抱住你的人。</li><li>我依旧敢和生活顶撞，敢在逆境里撒野，直面生活的污水，永远乐意为新的一轮月亮和日落欢呼。</li><li>仗义每多屠狗辈，负心多是读书人。</li><li>满眼都是你又怎样，深情专一又如何？最后还不是被辜负？在这个暧昧横行的年代，深情，不过是个笑话</li><li>你低估了我想陪你走下去的决心，而我高估了我在你心里的位置，正如你是我患得患失的梦，而我是你可有可无的，毕竟这穿越山河的剑，刺的都是用情至极的人</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 句子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo的博客搭建_win10_github</title>
      <link href="2020/11/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA_hexo_github_win10/"/>
      <url>2020/11/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA_hexo_github_win10/</url>
      
        <content type="html"><![CDATA[<blockquote><p>因为有的内容我电脑已经有了,所以部分步骤不是很完整~我主要是在自己操作过程中略微记录了一下方便后期参考.如果有问题可以参考一下<a href="https://hexo.io/zh-cn/docs/setup">hexo</a>网站,里面内容也比较完整,或者email联系我也ok,如果有空也会尽量回复的………</p></blockquote><a id="more"></a><h2 id="1-node的安装"><a href="#1-node的安装" class="headerlink" title="1.node的安装"></a>1.node的安装</h2><ol><li><p>下载<a href="http://nodejs.org/">node.js</a></p></li><li><p>直接安装</p></li><li><p>配置系统环境变量–在<code>系统变量</code>中直接在<code>path</code>中添加,直接复制你的安装目录即可.</p><p><img src="https://i.loli.net/2020/11/20/TOtf2oSmxQF5l6N.png" alt="image-20201120223735403"></p></li><li><p>测试是否配置完成,在<code>cmd</code>窗口输入<code>node -v</code>看是否可以正常显示版本,输入<code>npm -v</code>看是否成功显示npm版本,具体的方式百度到处都有.</p></li></ol><h2 id="2-github的注册"><a href="#2-github的注册" class="headerlink" title="2.github的注册"></a>2.github的注册</h2><ol><li><p>注册<a href="">github</a></p></li><li><p>创建一个新的repository,这里注意如果需要使用github pages的话那么名称必须是<code>你的用户名.github.io</code>,这样你配置完之后可以直接通过这个地址访问你的博客.(我的名称如下)</p><p><img src="https://i.loli.net/2020/11/20/lXKPk6RH7oEc89v.png" alt="image-20201120224739138"></p></li><li><p>顺手点击一下,下一步git配置里面要用到这</p><p><code>点右上角头像–settings–SSH and GPG keys</code>准备输入一会的地址</p></li></ol><h2 id="3-win10系统git环境的安装和配置"><a href="#3-win10系统git环境的安装和配置" class="headerlink" title="3.win10系统git环境的安装和配置"></a>3.win10系统git环境的安装和配置</h2><ol><li><p>下载<a href="https://git-scm.com/download/win">git</a>并安装好</p></li><li><p>cmd命令行打开,输入<code>git version</code>看是否显示版本信息,没有显示的话,进入系统环境配置,在path中添加git 的安装目录</p><img src="https://i.loli.net/2020/11/21/ArfYKebXzIuMTWs.png" alt="image-20201121020448803" style="zoom:67%;" /></li><li><p>打开git bash,然后配置用户名和邮箱地址cmd</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##配置用户名</span><br><span class="line">git config --global user.name &quot;fenda&quot;  </span><br><span class="line">#配置邮箱</span><br><span class="line">git config --global user.email “fenda.abc@gmail.com”</span><br><span class="line">#git push的时候记住用户名和密码</span><br><span class="line">git config --global credential.helper store </span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>如果你之前用过git,那么直接寻找本地的<code>.gitconfig</code>文件看里面你配置的用户名和邮箱地址或者<code>cd ~/. ssh #检查本机已存在的ssh密钥</code></p></li><li><p>如果提示<code>如果提示：No such file or directory</code> 说明你是第一次使用git;输入<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code>,然后需要输入保存的位置和设置密码,这里可以不用输入直接连续回车三次也行,最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入<code>个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</code>将刚复制的内容粘贴到key那里，title随便填，保存。如下图所示</p><img src="https://i.loli.net/2020/11/20/Min4AHDOJSumRKV.png" alt="image-20201120225731648" style="zoom:50%;" /></li><li><p>测试是否可以使用:在git bash中输入<code>ssh -T git@github.com</code>  注意邮箱地址不用改,直接复制即可,看是否如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi abcdefc! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息key添加完成</p></li><li><p>然后配置ssh,</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh #进入ssh目录</span><br><span class="line">sudo touch config #新建ssh的配置文件</span><br><span class="line">sudo gedit config #修改ssh的配置文件</span><br><span class="line">sudo chmod <span class="number">600</span> config #添加权限</span><br></pre></td></tr></table></figure><p><strong>config</strong>文件的内容：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com  </span><br><span class="line">User 你的注册邮箱 </span><br><span class="line">Hostname ssh.github.com  </span><br><span class="line">PreferredAuthentications publickey  </span><br><span class="line">IdentityFile ~/.ssh/id_rsa  </span><br><span class="line">Port <span class="number">443</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssh git@github.com</span><br></pre></td></tr></table></figure><p>如果看到下图,说明SSH已配置成功！</p><p><img src="https://i.loli.net/2020/11/21/c2GxYlBhIEyH8Dt.png" alt="image-20201121032150442"></p></li></ol><h2 id="4-hexo的安装"><a href="#4-hexo的安装" class="headerlink" title="4.hexo的安装"></a>4.hexo的安装</h2><blockquote><p>这一步可以在安装node.js的时候一块安装了</p></blockquote><ol><li><p>打开命令行窗口输入:<code>npm install -g hexo-cli</code>,等待命令执行完成,默认安装在nodejs的目录里面,然后需要到系统环境变量中配置环境,确保cmd窗格能直接识别命令,我这里等待的时间比较久(网友好多直接用cnpm安装的,可能会快点,可以借鉴)</p></li><li><p>用cd命令切换到你需要保存blog的位置,例如我的在<code>D:\Documents\blog</code>,我直接切换到<code>D:\Documents</code>,然后执行<code>hexo init blog #(这个blog是我博客的文件夹名,你可以用你自己的)</code>,这里也等待的比较长的时间</p></li><li><p>然后<code>cd blog</code>,进入blog目录</p></li><li><p>执行<code>npm install</code>,执行完成后的目录如下,可以用ls查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li><li><p>这些目录的具体说明在hexo网站有,其中</p><ol><li><code>source</code>中的<code>_posts</code>中是已经保存的Markdown文件保存的地方,</li><li><code>themes</code>中是主题,默认已经有了一个,我后面会切换一个</li><li><code>_config.yml</code>是配置文件,详细的信息建议看<a href="https://hexo.io/zh-cn/docs/configuration">官网</a>,你博客的名字,使用的语言,时区,以及最后上传到github的位置都是在这里面进行配置的…….现在可以先不看,一会只修改一下github相关的东西和主题即可,剩下的东西后面再慢慢研究,其实我现在也是半斤八两,不过边学边卖吗,不懂就查~~</li></ol></li><li><p>回到git bash中,</p><ol><li><p>使用<code>hexo g</code>,将_post文件夹中已经有的md文件进行渲染,</p></li><li><p>使用<code>hexo s</code>,启动hexo博客的本地服务器,可以看到提示的本地访问地址,复制到浏览器访问<code>http://localhost:4000</code>,执行命令如下</p><img src="https://i.loli.net/2020/11/20/u4Rc6JULbo1dBWn.png" alt="image-20201120232225288" style="zoom:80%;" /><p>网页效果图如下:</p><img src="https://i.loli.net/2020/11/20/KDExGhbkXFzg7aw.png" alt="image-20201120233407339" style="zoom:67%;" /></li><li><p>使用<code>hexo clear</code>,可以将缓存进行清除</p></li><li><p>使用<code>hexo g -d</code>执行生成和上传github的命令,</p><ol><li><p><code>注意</code>需要确保首先github上面已经创建了repository,公开的(如果私有的话使用github pages需要付费),且命名符合上面注册时候我写的命名规则,</p></li><li><p><code>注意</code>已经安装配置了本地的git环境</p></li><li><p><code>注意</code>上传github需要先安装相关插件,在blog目录下执行<code>npm install hexo-deployer-git --save</code>,这里有可能报错,提示权限不足等等,可以重新使用管理员权限切换到相应目录然后执行上面的命令</p></li><li><p><code>注意</code>已经配置了本地<code>_config.yml</code>中的git相关设置,如下图所示</p><img src="https://i.loli.net/2020/11/21/nzBMQr1Zkc8iNHF.png" alt="image-20201121032614470" style="zoom:80%;" /></li><li><p>第一次执行<code>hexo g -d</code>命令会提示输入github用户名和密码~</p></li><li><p>执行<code>hexo g -d</code>命令,执行完效果如下</p><img src="https://i.loli.net/2020/11/20/FiA1rnHQ4Xc35dM.png" alt="image-20201120234305198" style="zoom:80%;" /></li><li><p>浏览器直接访问<code>你的用户名.github.io</code>,我的是<code>https://fendaabc.github.io/</code>,效果如下(我这在<code>_config.yml</code>中修改了一部分的页面信息,下面会放的)</p><p><img src="https://i.loli.net/2020/11/20/Wq5LK2YnmykvU9c.png" alt="image-20201120234627496"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">芬达里没有泡泡</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">来杯可乐,不加糖</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">芬达</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure></li><li><p>到这里其实最基本的功能已经完成了,本地生成的markdown文件已经可以在浏览器进行显示了</p></li></ol></li></ol></li></ol><h2 id="5-常规的操作步骤"><a href="#5-常规的操作步骤" class="headerlink" title="5.常规的操作步骤"></a>5.常规的操作步骤</h2><ol><li>其实已经可以基本使用联网版本的个人博客了,剩下的功能就留给我们慢慢探索了</li><li>常规使用方法<ol><li>git bash进入blog目录,然后<code>hexo n 博客名字</code>,生成新博客,然后打开在里面可以直接进行编辑,默认生成已经有了时间和标题,格式相对完整</li><li>写完以后,<code>hexo g</code>生成html文件,<code>hexo s</code>本地服务打开进行预览</li><li>不预览的话直接<code>hexo g -d</code>生成并上传</li><li>为了避免默认主题上传后全文展示,可以在合适的地方使用<code>&lt;!--more--&gt;</code>,将前面部分作为摘要展示,后面部分需要点开全文进行展示…………..但这块应该可以通过别的主题直接进行实现,而且默认主题并不是很好看</li></ol></li><li>但是现在还存在一些问题,第三方的主题上传github后显示效果和本地不一样,域名解析还存在一定问题,还得修改一下</li></ol><h2 id="6-第三方主题maupassant的安装"><a href="#6-第三方主题maupassant的安装" class="headerlink" title="6.第三方主题maupassant的安装"></a>6.第三方主题<strong>maupassant</strong>的安装</h2><blockquote><p>我使用的主题名字是<strong>maupassant</strong>,<a href="https://www.haomwei.com/technology/maupassant-hexo.html">安装步骤页面</a>和<a href="https://github.com/tufu9441/maupassant-hexo">github页面</a>,效果图如下</p><img src="https://i.loli.net/2020/11/21/whaLIOoPkxteRVD.png" alt="image-20201121000028938" style="zoom:50%;" /></blockquote><ol><li><p>命令行切换到blog目录,然后输入一下命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant  </span><br><span class="line">npm install hexo-renderer-pug --save  #会提示用管理员权限运行</span><br><span class="line">npm install hexo-renderer-sass --save  </span><br></pre></td></tr></table></figure></li><li><p>编辑Hexo目录下的 <code>_config.yml</code>，将<code>theme</code>的值改为<code>maupassant</code>。</p></li><li><p>确保刚刚pull的theme是在blog的根目录,并且maupassant和landscape在同一个文件夹中</p></li><li><p>执行<code>hexo clear</code>清理缓存,然后<code>hexo g</code>重新生成 ,再<code>hexo s</code>打开本地服务,通过浏览器查看<code>http://localhost:4000</code>是否已经成功启用新版主题.如下图</p></li></ol><img src="https://i.loli.net/2020/11/21/3EUrVw1KYRgyiCG.png" alt="image-20201121005907303" style="zoom:67%;" /> 5. 执行`hexo d`,将改变后的文件进行上传,访问就好<ol start="6"><li><p><code>注意</code>:使用后发现网页乱码,无法渲染,找到解决办法是—–将本地blog目录下的``_config.yml<code>文件中的</code>per_page:20<code>改成</code>5`或者更小就正常加载了,如下:</p><img src="https://i.loli.net/2020/11/21/zMtvwxZnHiEmNu1.png" alt="image-20201121173025899" style="zoom:67%;" /></li></ol><h2 id="6-第三方主题light安装"><a href="#6-第三方主题light安装" class="headerlink" title="6.第三方主题light安装"></a>6.第三方主题light安装</h2><blockquote><p>项目地址:<a href="https://github.com/hexojs/hexo-theme-light">https://github.com/hexojs/hexo-theme-light</a></p></blockquote><ol><li>安装<code>git clone --depth 1 https://github.com/hexojs/hexo-theme-light themes/light</code></li><li></li></ol><h2 id="6-第三方主题next的安装"><a href="#6-第三方主题next的安装" class="headerlink" title="6.第三方主题next的安装"></a>6.第三方主题<strong>next</strong>的安装</h2><blockquote><ul><li><p>步骤可参见<a href="https://github.com/next-theme/hexo-theme-next/blob/master/docs/zh-CN/README.md">github</a></p></li><li><p>m每个月的next更新: <code>npm update hexo-theme-next</code></p></li></ul></blockquote><h2 id="7-绑定个人域名"><a href="#7-绑定个人域名" class="headerlink" title="7.绑定个人域名"></a>7.绑定个人域名</h2><ol><li><p>可以在阿里云里购买自己喜欢的<a href="https://wanwang.aliyun.com/">域名</a></p></li><li><p>购买完之后到控制台添加域名解析地址<img src="https://i.loli.net/2020/11/21/aoDOhCINxgZmWAF.png" alt="image-20201121011942199" style="zoom:50%;" /></p><ol><li><strong>A记录</strong>:用本地cmd ping一下自己的<code>用户名.github.io</code>,会得到一个IPV4的地址,将这个地址填写到记录值</li><li>CNAME记录:主机记录是www,记录值是<code>用户名.github.io</code>,</li><li>剩下应该还有一些,但我还搞不懂,就没弄</li><li>会到github页面,点开你的blog的repository,进入setting,找到GitHub Pages,然后在下面写上你购买的域名<img src="https://i.loli.net/2020/11/21/3JgrIkYClVEcfB6.png" alt="image-20201121014244889" style="zoom:67%;" /></li><li>通过个人域名直接在浏览器进行博客访问.</li><li><code>注意</code>:使用了几次发现这里绑定的域名会自动消失,然后导致访问域名解析不到地址,解决办法是在本地blog<code>\source</code>目录下新建<code>CNAME</code>文件,里面写上你购买的域名,例如我的<code>fenda.info</code>,这样就解决了域名消失的问题,原理不懂,但目前是这样解决的~</li></ol></li></ol><h2 id="8-基于maupassant主题的页面调整"><a href="#8-基于maupassant主题的页面调整" class="headerlink" title="8.基于maupassant主题的页面调整"></a>8.基于maupassant主题的页面调整</h2><p><strong>我现在使用的主题是maupassant,所以下面的调整都是在这个前提下进行的,基本所有功能默认都集成好了,直接在主题配置文件中启用就行了,因为我比较笨,所以记录一下开启的过程</strong></p><blockquote><ul><li><input checked="" disabled="" type="checkbox"> <ol><li>网页左上角小logo</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="2"><li>标签栏 例如:java  doc Android等的显示</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="3"><li><del>谷歌搜索实现</del></li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="4"><li>本地搜索功能实现,搜索已经存在的文档</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="5"><li>文档页面的美化,统一前端页面,所有的文档尽量除了标题和描述信息以外其他都不展示,避免页面混乱–</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="6"><li>友情链接</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="7"><li>文章初始化时候_日期-时间-标签-目录等的在哪设置:<a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a></li></ol></li><li><input disabled="" type="checkbox"> <ol start="8"><li>文章代码块样式的美化:<a href="https://hexo.io/zh-cn/docs/tag-plugins">https://hexo.io/zh-cn/docs/tag-plugins</a>  </li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="9"><li>启用评论系统</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="10"><li>文字字数阅读时间显示和浏览量显示</li></ol></li><li><input disabled="" type="checkbox"> <ol start="11"><li>目录美化,尽量将目录往右边放,目前是直接出现在正文一开始</li></ol></li><li><input disabled="" type="checkbox"> <ol start="12"><li>搜索引擎收录</li></ol></li></ul></blockquote><h3 id="1-网页左上角小logo的添加"><a href="#1-网页左上角小logo的添加" class="headerlink" title="1. 网页左上角小logo的添加"></a>1. 网页左上角小logo的添加</h3><p>制作一个你需要的logo,命名为<code>favicon.ico</code>,放在<code>\source</code>目录下,然后重新生成以后就好了</p><p><img src="https://i.loli.net/2020/11/21/gjXmZFHLGazQwYh.png" alt="image-20201121172231087"></p><h3 id="2-标签栏设置"><a href="#2-标签栏设置" class="headerlink" title="2. 标签栏设置"></a>2. 标签栏设置</h3><blockquote><p>操作在Markdown文档所在目录执行,即<code>blog\source\_posts</code>目录</p></blockquote><ol><li><h3 id="3-谷歌搜索实现"><a href="#3-谷歌搜索实现" class="headerlink" title="3.谷歌搜索实现"></a>3.谷歌搜索实现</h3></li></ol><h3 id="4-本地搜索"><a href="#4-本地搜索" class="headerlink" title="4.本地搜索"></a>4.本地搜索</h3><p>主题配置文件中<code>self_search</code>标签配置如下:</p><img src="https://i.loli.net/2020/11/22/SFUwtdvm5iyzRM7.png" alt="image-20201122222729500" style="zoom:67%;" /><h3 id="5-主页显示文章的排版整齐-可参见下面7中post的模板"><a href="#5-主页显示文章的排版整齐-可参见下面7中post的模板" class="headerlink" title="5.主页显示文章的排版整齐(可参见下面7中post的模板)"></a>5.主页显示文章的排版整齐(可参见下面7中post的模板)</h3><p>我希望文章的显示效果和我看到的某个大佬的,如下图,避免首页看到每个文章显示有的长有的短,有的还带超链接,主要还是希望看起来整齐一些,这里两种解决办法:</p><ol><li><p>可以在文章的front-matter中(我是在post模板中,看第7项下面我的post里的内容)填写一项<code>description: 你想显示的句子</code>来设置你想显示的摘要，</p></li><li><p>直接在文章内容中插入<!--more-->以隐藏后面的内容,前面的内容就会作为摘要在首页显示。</p><p>若两者都未设置，则自动截取文章第一段作为摘要。</p></li></ol><h3 id="6-友情链接"><a href="#6-友情链接" class="headerlink" title="6.友情链接"></a>6.友情链接</h3><p>在主题配置文件中,有个<code>links</code>标签,在下面按照格式编辑就行.</p><img src="https://i.loli.net/2020/11/22/pgCERI9PoUXYGT4.png" alt="image-20201122190232959" style="zoom:75%;" /><h3 id="7-文章初始化时候的日期时间标签"><a href="#7-文章初始化时候的日期时间标签" class="headerlink" title="7.文章初始化时候的日期时间标签"></a>7.文章初始化时候的日期时间标签</h3><ol><li><p><strong>文章标题</strong>:在正文中直接用—分隔开,或者是在命令中用<code>hexo n 文章标题</code>生成,我发现如果文章命名存在空格的话显示时候存在问题,有的不显示文章正文,具体原因不了解,我把文章标题的空格都用下划线替换了</p></li><li><p><strong>标签</strong>:需要先在主题配置文件中启用<code>widgets</code>中的<code>tag</code>标签(默认已经启用了),然后根目录命令行输入</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> tags</span><br></pre></td></tr></table></figure><p>成功后会提示</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~<span class="regexp">/Documents/</span>blog<span class="regexp">/source/</span>tags/index.md</span><br></pre></td></tr></table></figure></li></ol><p>   然后再在根目录的<code>scaffolds</code>文件夹中编辑<code>post.md</code>文件模板,在文章中添加tag格式需要如下:</p>   <figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- java</span><br><span class="line">- Android</span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>日期</strong>:本身的post模板文件已经包含了日期函数,所以当用<code>hexo n 文章题目</code>生成的文章中默认包含了日期,如果自己手动创建的话那么文章开头至少需要包含<code>title</code>和<code>date</code>两项,</p></li><li><p><strong>目录</strong>:post中使用<code>toc:true</code>实现</p></li><li><p>下面是我post的模板,里面包括了标题,日期,评论,摘要,目录和标签</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;To the time to life, rather than to life in time.&quot;</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="8-代码块美化"><a href="#8-代码块美化" class="headerlink" title="8.代码块美化"></a>8.代码块美化</h3><p>我的代码格式不规范,我基本使用反引号来实现代码功能,所以代码变色没有体现,后面再说吧,这个现在无所谓</p><h3 id="9-评论-使用的Disqus"><a href="#9-评论-使用的Disqus" class="headerlink" title="9.评论-使用的Disqus"></a>9.评论-使用的Disqus</h3><p>在主题配置文件中有<code>Disqus</code>的标签,先到官网<a href="https://disqus.com/">注册登录</a>,然后点击<code>I want to install</code>,在下个页面有个<code>Website Name</code>这个名字一定要记住(其他随便填,提交以后后面的页面没有我们的系统因为本身hexo已经集成了这个评论系统,所以后面的随便填写就ok,或者直接跳过好像也行吧),需要在主题文件的标签后面写上这个名字,比如我写的名字是<code>fenda</code>,所以主题文件里我写的就是fenda,如下图所示,然后post里我配置了<code>comments: true</code>,就是评论默认开启,这样评论系统就可以使用了.</p><p>注册网站中:</p><img src="https://i.loli.net/2020/11/22/sOetU5xGMqPBNng.png" alt="image-20201122222137750" style="zoom:50%;" /><p>主题配置文件中:</p><img src="https://i.loli.net/2020/11/22/KjzeVYEgAp2FoLl.png" alt="image-20201122222244821" style="zoom:80%;" /><p>实现的效果:</p><img src="https://i.loli.net/2020/11/22/kKV6YJ7xPoM3XiR.png" alt="image-20201122222514522" style="zoom: 67%;" /><h3 id="10-文字字数统计和浏览量统计"><a href="#10-文字字数统计和浏览量统计" class="headerlink" title="10.文字字数统计和浏览量统计"></a>10.文字字数统计和浏览量统计</h3><p>主题配置文件中,有个<code>wordcount</code>标签,将后面改成<code>true</code>,</p><p><img src="https://i.loli.net/2020/11/22/Thg16UIDENr2mdL.png" alt="image-20201122190418057"></p><p>然后命令行打开切换到博客根目录,执行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>就好了,直接在主题配置文件打开busuanzi的配置,就能显示浏览量了.效果如下图:</p><img src="https://i.loli.net/2020/11/22/WsOkRD65XIqPUAa.png" alt="image-20201122225310550" style="zoom:80%;" /><h3 id="11-目录美化"><a href="#11-目录美化" class="headerlink" title="11.目录美化"></a>11.目录美化</h3><blockquote><p>参考网页:<a href="https://www.jianshu.com/p/693afdcef95f">https://www.jianshu.com/p/693afdcef95f</a></p><p>半夜实验了一次,没成功,先放下了</p></blockquote><h3 id="12-搜索引擎收录"><a href="#12-搜索引擎收录" class="headerlink" title="12.搜索引擎收录"></a>12.搜索引擎收录</h3><blockquote><p>使用的<a href="https://github.com/cjh0613/hexo-submit-urls-to-search-engine">插件</a>和具体<a href="https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine.html">步骤</a></p><p>目前我使用赛谷歌推送有问题.</p></blockquote><h2 id="9-静态页面托管-CodingPage"><a href="#9-静态页面托管-CodingPage" class="headerlink" title="9.静态页面托管_CodingPage"></a>9.静态页面托管_CodingPage</h2><blockquote><p>codingpage和githubpage一个道理都是静态代码的托管页面,区别是coding在国内访问会更好些,同时在阿里的域名解析中加入coding的地址这样让访问更稳定些.</p></blockquote><ol><li>注册并进入coding页面,然后创建新项目_代码托管项目,项目名称无所谓,自己方便记忆就好</li></ol><img src="https://i.loli.net/2020/11/23/o4x7SWcPTJHfL53.png" alt="image-20201123003130106" style="zoom: 67%;" /><ol start="2"><li><p>点击<code>代码仓库</code>然后<code>新建代码仓库</code>,自己取名字,然后<code>取消代码扫描</code>,然后<code>确定</code></p></li><li><p>复制ssh到博客配置文件,在<code>deploy</code>中进行如下配置</p><img src="https://i.loli.net/2020/11/23/dwSDH9GzepvMtZ3.png" alt="image-20201123004109744" style="zoom:67%;" /><img src="https://i.loli.net/2020/11/23/FHkQWZD6uvdglnw.png" alt="image-20201123004322925" style="zoom:67%;" /></li></ol><ol start="4"><li><p>原来的ssh公钥保存在id_rsa.pub中,复制出来,和github一样添加到ssh公钥中</p></li><li><p>保存并执行<code>hexo g -d</code>,推送成功后开始静态页面配置</p></li><li><p>返回刚才的代码仓库,点开左下角的<code>项目配置</code>,然后<code>功能开关</code>中点开<code>持续集成</code>,然后返回<code>代码仓库</code>,点击<code>持续部署</code>然后<code>静态网站</code>,等<code>权限配置</code>和<code>实名认证</code>完后<code>新建静态网站</code>,下面的网站类型可选项较多.</p><img src="https://i.loli.net/2020/11/23/LBKRnm2ZvDVgqlM.png" alt="image-20201123005143711" style="zoom: 50%;" /><img src="https://i.loli.net/2020/11/23/76OI2ahSTbYQ9KP.png" alt="image-20201123005212619" style="zoom: 77%;" /></li><li><p>由于我们在本地生成并上传的是静态页面,所以这里直接选择<code>静态页面</code>就可以了,当然了,如果希望直接托管所有项目代码,然后线上生成静态页面的话就可以选择<code>hexo</code>,这里看你怎么考虑,如果所有步骤和前面一致的话就选择<code>静态页面</code>,等它部署完会生成一个地址,然后再到阿里域名(我买的阿里域名)中心把地址和域名绑定就好了.</p></li><li><p>完结,睡觉</p></li></ol><h2 id="10-需要研究"><a href="#10-需要研究" class="headerlink" title="10.需要研究"></a>10.需要研究</h2><blockquote><p>网上找的一部分,还没细看</p></blockquote><p>常用文件和作用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">base<span class="selector-class">.pug</span>        集成head部分模版+底部</span><br><span class="line">archive<span class="selector-class">.pug</span>        归档页的模版</span><br><span class="line">page<span class="selector-class">.pug</span>        自定义页面的模版</span><br><span class="line">post<span class="selector-class">.pug</span>        文章页模版</span><br><span class="line"><span class="selector-tag">footer</span><span class="selector-class">.pug</span>        尾部文件模版</span><br><span class="line">footer02<span class="selector-class">.pug</span>      底部菜单模版</span><br><span class="line">head<span class="selector-class">.pug</span>        首页的模版（主要是通用JS的引用，如评论，计数器）</span><br><span class="line">_footer文件夹      底部菜单各模版</span><br></pre></td></tr></table></figure><p>详细教程:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">底部菜单栏diy:</span><br><span class="line">    _footer文件夹</span><br><span class="line">    添加:</span><br><span class="line">         在_footer文件夹中新建xxx.pug,写上内容</span><br><span class="line">         在config文件中的footer下 添加进去 -xxx  即可显示</span><br><span class="line">    修改:</span><br><span class="line">        gywo.pug        <span class="comment">##关于我</span></span><br><span class="line">        gzhao.pug       <span class="comment">##公众号或微信二维码</span></span><br><span class="line">        xzhao.pug          <span class="comment">##百度熊掌号相关信息</span></span><br><span class="line">        links.pug          <span class="comment">##友情链接/关于本站/关于博主(简历)</span></span><br><span class="line">友情链接:</span><br><span class="line">    sources<span class="regexp">/href/i</span>ndex.md</span><br><span class="line">关于本站:</span><br><span class="line">    sources<span class="regexp">/site/i</span>ndex.md</span><br><span class="line">关于博主:</span><br><span class="line">    sources<span class="regexp">/about/i</span>ndex.md</span><br><span class="line">留言:</span><br><span class="line">    sources<span class="regexp">/comment/i</span>ndex.md</span><br><span class="line">工具:</span><br><span class="line">    sources<span class="regexp">/tool/i</span>ndex.md</span><br><span class="line">音乐:</span><br><span class="line">    sources<span class="regexp">/music/i</span>ndex.md</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/19/hello-world/"/>
      <url>2020/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> md </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

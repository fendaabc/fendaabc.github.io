<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Toots_2020_Nov.22</title>
      <link href="2020/11/22/Toots-2020-Nov-22/"/>
      <url>2020/11/22/Toots-2020-Nov-22/</url>
      
        <content type="html"><![CDATA[<ul><li>心里没有了波涛汹涌，只是觉得心里突然空了，我不确定自己能用多少时间把你彻底忘了，也不敢保证我就能真的把你忘了，我只能像现在这样，不吵不闹，不悲不喜，安安静静的与你，再无任何交集。</li></ul><a id="more"></a><ul><li>如果他真的有那么爱你，他会把你介绍进他的生活圈子里，不会连公开的勇气都没有，爱情本应该是一件公开，温暖的事情，何必委屈自己去附和一段不见光的感情，你真正需要的是一个，灯光再亮也会抱住你的人。</li><li>我依旧敢和生活顶撞，敢在逆境里撒野，直面生活的污水，永远乐意为新的一轮月亮和日落欢呼。</li><li>仗义每多屠狗辈，负心多是读书人。</li><li>满眼都是你又怎样，深情专一又如何？最后还不是被辜负？在这个暧昧横行的年代，深情，不过是个笑话</li><li>你低估了我想陪你走下去的决心，而我高估了我在你心里的位置，正如你是我患得患失的梦，而我是你可有可无的，毕竟这穿越山河的剑，刺的都是用情至极的人</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 句子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo的博客搭建_win10_github</title>
      <link href="2020/11/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA_hexo_github_win10/"/>
      <url>2020/11/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA_hexo_github_win10/</url>
      
        <content type="html"><![CDATA[<blockquote><p>因为有的内容我电脑已经有了,所以部分步骤不是很完整~我主要是在自己操作过程中略微记录了一下方便后期参考.如果有问题可以参考一下<a href="https://hexo.io/zh-cn/docs/setup">hexo</a>网站,里面内容也比较完整,或者email联系我也ok,如果有空也会尽量回复的………</p></blockquote><a id="more"></a><h2 id="1-node的安装"><a href="#1-node的安装" class="headerlink" title="1.node的安装"></a>1.node的安装</h2><ol><li><p>下载<a href="http://nodejs.org/">node.js</a></p></li><li><p>直接安装</p></li><li><p>配置系统环境变量–在<code>系统变量</code>中直接在<code>path</code>中添加,直接复制你的安装目录即可.</p><p><img src="https://i.loli.net/2020/11/20/TOtf2oSmxQF5l6N.png" alt="image-20201120223735403"></p></li><li><p>测试是否配置完成,在<code>cmd</code>窗口输入<code>node -v</code>看是否可以正常显示版本,输入<code>npm -v</code>看是否成功显示npm版本,具体的方式百度到处都有.</p></li></ol><h2 id="2-github的注册"><a href="#2-github的注册" class="headerlink" title="2.github的注册"></a>2.github的注册</h2><ol><li><p>注册<a href="">github</a></p></li><li><p>创建一个新的repository,这里注意如果需要使用github pages的话那么名称必须是<code>你的用户名.github.io</code>,这样你配置完之后可以直接通过这个地址访问你的博客.(我的名称如下)</p><p><img src="https://i.loli.net/2020/11/20/lXKPk6RH7oEc89v.png" alt="image-20201120224739138"></p></li><li><p>顺手点击一下,下一步git配置里面要用到这</p><p><code>点右上角头像–settings–SSH and GPG keys</code>准备输入一会的地址</p></li></ol><h2 id="3-win10系统git环境的安装和配置"><a href="#3-win10系统git环境的安装和配置" class="headerlink" title="3.win10系统git环境的安装和配置"></a>3.win10系统git环境的安装和配置</h2><ol><li><p>下载<a href="https://git-scm.com/download/win">git</a>并安装好</p></li><li><p>cmd命令行打开,输入<code>git version</code>看是否显示版本信息,没有显示的话,进入系统环境配置,在path中添加git 的安装目录</p><img src="https://i.loli.net/2020/11/21/ArfYKebXzIuMTWs.png" alt="image-20201121020448803" style="zoom:67%;" /></li><li><p>打开git bash,然后配置用户名和邮箱地址cmd</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##配置用户名</span><br><span class="line">git config --global user.name &quot;fenda&quot;  </span><br><span class="line">#配置邮箱</span><br><span class="line">git config --global user.email “fenda.abc@gmail.com”</span><br><span class="line">#git push的时候记住用户名和密码</span><br><span class="line">git config --global credential.helper store </span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>如果你之前用过git,那么直接寻找本地的<code>.gitconfig</code>文件看里面你配置的用户名和邮箱地址或者<code>cd ~/. ssh #检查本机已存在的ssh密钥</code></p></li><li><p>如果提示<code>如果提示：No such file or directory</code> 说明你是第一次使用git;输入<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code>,然后需要输入保存的位置和设置密码,这里可以不用输入直接连续回车三次也行,最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入<code>个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</code>将刚复制的内容粘贴到key那里，title随便填，保存。如下图所示</p><img src="https://i.loli.net/2020/11/20/Min4AHDOJSumRKV.png" alt="image-20201120225731648" style="zoom:50%;" /></li><li><p>测试是否可以使用:在git bash中输入<code>ssh -T git@github.com</code>  注意邮箱地址不用改,直接复制即可,看是否如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi abcdefc! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息key添加完成</p></li><li><p>然后配置ssh,</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh #进入ssh目录</span><br><span class="line">sudo touch config #新建ssh的配置文件</span><br><span class="line">sudo gedit config #修改ssh的配置文件</span><br><span class="line">sudo chmod <span class="number">600</span> config #添加权限</span><br></pre></td></tr></table></figure><p><strong>config</strong>文件的内容：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com  </span><br><span class="line">User 你的注册邮箱 </span><br><span class="line">Hostname ssh.github.com  </span><br><span class="line">PreferredAuthentications publickey  </span><br><span class="line">IdentityFile ~/.ssh/id_rsa  </span><br><span class="line">Port <span class="number">443</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssh git@github.com</span><br></pre></td></tr></table></figure><p>如果看到下图,说明SSH已配置成功！</p><p><img src="https://i.loli.net/2020/11/21/c2GxYlBhIEyH8Dt.png" alt="image-20201121032150442"></p></li></ol><h2 id="4-hexo的安装"><a href="#4-hexo的安装" class="headerlink" title="4.hexo的安装"></a>4.hexo的安装</h2><blockquote><p>这一步可以在安装node.js的时候一块安装了</p></blockquote><ol><li><p>打开命令行窗口输入:<code>npm install -g hexo-cli</code>,等待命令执行完成,默认安装在nodejs的目录里面,然后需要到系统环境变量中配置环境,确保cmd窗格能直接识别命令,我这里等待的时间比较久(网友好多直接用cnpm安装的,可能会快点,可以借鉴)</p></li><li><p>用cd命令切换到你需要保存blog的位置,例如我的在<code>D:\Documents\blog</code>,我直接切换到<code>D:\Documents</code>,然后执行<code>hexo init blog #(这个blog是我博客的文件夹名,你可以用你自己的)</code>,这里也等待的比较长的时间</p></li><li><p>然后<code>cd blog</code>,进入blog目录</p></li><li><p>执行<code>npm install</code>,执行完成后的目录如下,可以用ls查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li><li><p>这些目录的具体说明在hexo网站有,其中</p><ol><li><code>source</code>中的<code>_posts</code>中是已经保存的Markdown文件保存的地方,</li><li><code>themes</code>中是主题,默认已经有了一个,我后面会切换一个</li><li><code>_config.yml</code>是配置文件,详细的信息建议看<a href="https://hexo.io/zh-cn/docs/configuration">官网</a>,你博客的名字,使用的语言,时区,以及最后上传到github的位置都是在这里面进行配置的…….现在可以先不看,一会只修改一下github相关的东西和主题即可,剩下的东西后面再慢慢研究,其实我现在也是半斤八两,不过边学边卖吗,不懂就查~~</li></ol></li><li><p>回到git bash中,</p><ol><li><p>使用<code>hexo g</code>,将_post文件夹中已经有的md文件进行渲染,</p></li><li><p>使用<code>hexo s</code>,启动hexo博客的本地服务器,可以看到提示的本地访问地址,复制到浏览器访问<code>http://localhost:4000</code>,执行命令如下</p><img src="https://i.loli.net/2020/11/20/u4Rc6JULbo1dBWn.png" alt="image-20201120232225288" style="zoom:80%;" /><p>网页效果图如下:</p><img src="https://i.loli.net/2020/11/20/KDExGhbkXFzg7aw.png" alt="image-20201120233407339" style="zoom:67%;" /></li><li><p>使用<code>hexo clear</code>,可以将缓存进行清除</p></li><li><p>使用<code>hexo g -d</code>执行生成和上传github的命令,</p><ol><li><p><code>注意</code>需要确保首先github上面已经创建了repository,公开的(如果私有的话使用github pages需要付费),且命名符合上面注册时候我写的命名规则,</p></li><li><p><code>注意</code>已经安装配置了本地的git环境</p></li><li><p><code>注意</code>上传github需要先安装相关插件,在blog目录下执行<code>npm install hexo-deployer-git --save</code>,这里有可能报错,提示权限不足等等,可以重新使用管理员权限切换到相应目录然后执行上面的命令</p></li><li><p><code>注意</code>已经配置了本地<code>_config.yml</code>中的git相关设置,如下图所示</p><img src="https://i.loli.net/2020/11/21/nzBMQr1Zkc8iNHF.png" alt="image-20201121032614470" style="zoom:80%;" /></li><li><p>第一次执行<code>hexo g -d</code>命令会提示输入github用户名和密码~</p></li><li><p>执行<code>hexo g -d</code>命令,执行完效果如下</p><img src="https://i.loli.net/2020/11/20/FiA1rnHQ4Xc35dM.png" alt="image-20201120234305198" style="zoom:80%;" /></li><li><p>浏览器直接访问<code>你的用户名.github.io</code>,我的是<code>https://fendaabc.github.io/</code>,效果如下(我这在<code>_config.yml</code>中修改了一部分的页面信息,下面会放的)</p><p><img src="https://i.loli.net/2020/11/20/Wq5LK2YnmykvU9c.png" alt="image-20201120234627496"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">芬达里没有泡泡</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">来杯可乐,不加糖</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">芬达</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure></li><li><p>到这里其实最基本的功能已经完成了,本地生成的markdown文件已经可以在浏览器进行显示了</p></li></ol></li></ol></li></ol><h2 id="5-常规的操作步骤"><a href="#5-常规的操作步骤" class="headerlink" title="5.常规的操作步骤"></a>5.常规的操作步骤</h2><ol><li>其实已经可以基本使用联网版本的个人博客了,剩下的功能就留给我们慢慢探索了</li><li>常规使用方法<ol><li>git bash进入blog目录,然后<code>hexo n 博客名字</code>,生成新博客,然后打开在里面可以直接进行编辑,默认生成已经有了时间和标题,格式相对完整</li><li>写完以后,<code>hexo g</code>生成html文件,<code>hexo s</code>本地服务打开进行预览</li><li>不预览的话直接<code>hexo g -d</code>生成并上传</li><li>为了避免默认主题上传后全文展示,可以在合适的地方使用<code>&lt;!--more--&gt;</code>,将前面部分作为摘要展示,后面部分需要点开全文进行展示…………..但这块应该可以通过别的主题直接进行实现,而且默认主题并不是很好看</li></ol></li><li>但是现在还存在一些问题,第三方的主题上传github后显示效果和本地不一样,域名解析还存在一定问题,还得修改一下</li></ol><h2 id="6-第三方主题maupassant的安装"><a href="#6-第三方主题maupassant的安装" class="headerlink" title="6.第三方主题maupassant的安装"></a>6.第三方主题<strong>maupassant</strong>的安装</h2><blockquote><p>我使用的主题名字是<strong>maupassant</strong>,<a href="https://www.haomwei.com/technology/maupassant-hexo.html">安装步骤页面</a>和<a href="https://github.com/tufu9441/maupassant-hexo">github页面</a>,效果图如下</p><img src="https://i.loli.net/2020/11/21/whaLIOoPkxteRVD.png" alt="image-20201121000028938" style="zoom:50%;" /></blockquote><ol><li><p>命令行切换到blog目录,然后输入一下命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant  </span><br><span class="line">npm install hexo-renderer-pug --save  #会提示用管理员权限运行</span><br><span class="line">npm install hexo-renderer-sass --save  </span><br></pre></td></tr></table></figure></li><li><p>编辑Hexo目录下的 <code>_config.yml</code>，将<code>theme</code>的值改为<code>maupassant</code>。</p></li><li><p>确保刚刚pull的theme是在blog的根目录,并且maupassant和landscape在同一个文件夹中</p></li><li><p>执行<code>hexo clear</code>清理缓存,然后<code>hexo g</code>重新生成 ,再<code>hexo s</code>打开本地服务,通过浏览器查看<code>http://localhost:4000</code>是否已经成功启用新版主题.如下图</p></li></ol><img src="https://i.loli.net/2020/11/21/3EUrVw1KYRgyiCG.png" alt="image-20201121005907303" style="zoom:67%;" /> 5. 执行`hexo d`,将改变后的文件进行上传,访问就好<ol start="6"><li><p><code>注意</code>:使用后发现网页乱码,无法渲染,找到解决办法是—–将本地blog目录下的``_config.yml<code>文件中的</code>per_page:20<code>改成</code>5`或者更小就正常加载了,如下:</p><img src="https://i.loli.net/2020/11/21/zMtvwxZnHiEmNu1.png" alt="image-20201121173025899" style="zoom:67%;" /></li></ol><h2 id="6-第三方主题light安装"><a href="#6-第三方主题light安装" class="headerlink" title="6.第三方主题light安装"></a>6.第三方主题light安装</h2><blockquote><p>项目地址:<a href="https://github.com/hexojs/hexo-theme-light">https://github.com/hexojs/hexo-theme-light</a></p></blockquote><ol><li>安装<code>git clone --depth 1 https://github.com/hexojs/hexo-theme-light themes/light</code></li><li></li></ol><h2 id="6-第三方主题next的安装"><a href="#6-第三方主题next的安装" class="headerlink" title="6.第三方主题next的安装"></a>6.第三方主题<strong>next</strong>的安装</h2><blockquote><ul><li><p>步骤可参见<a href="https://github.com/next-theme/hexo-theme-next/blob/master/docs/zh-CN/README.md">github</a></p></li><li><p>m每个月的next更新: <code>npm update hexo-theme-next</code></p></li></ul></blockquote><h2 id="7-绑定个人域名"><a href="#7-绑定个人域名" class="headerlink" title="7.绑定个人域名"></a>7.绑定个人域名</h2><ol><li><p>可以在阿里云里购买自己喜欢的<a href="https://wanwang.aliyun.com/">域名</a></p></li><li><p>购买完之后到控制台添加域名解析地址<img src="https://i.loli.net/2020/11/21/aoDOhCINxgZmWAF.png" alt="image-20201121011942199" style="zoom:50%;" /></p><ol><li><strong>A记录</strong>:用本地cmd ping一下自己的<code>用户名.github.io</code>,会得到一个IPV4的地址,将这个地址填写到记录值</li><li>CNAME记录:主机记录是www,记录值是<code>用户名.github.io</code>,</li><li>剩下应该还有一些,但我还搞不懂,就没弄</li><li>会到github页面,点开你的blog的repository,进入setting,找到GitHub Pages,然后在下面写上你购买的域名<img src="https://i.loli.net/2020/11/21/3JgrIkYClVEcfB6.png" alt="image-20201121014244889" style="zoom:67%;" /></li><li>通过个人域名直接在浏览器进行博客访问.</li><li><code>注意</code>:使用了几次发现这里绑定的域名会自动消失,然后导致访问域名解析不到地址,解决办法是在本地blog<code>\source</code>目录下新建<code>CNAME</code>文件,里面写上你购买的域名,例如我的<code>fenda.info</code>,这样就解决了域名消失的问题,原理不懂,但目前是这样解决的~</li></ol></li></ol><h2 id="8-基于maupassant主题的页面调整"><a href="#8-基于maupassant主题的页面调整" class="headerlink" title="8.基于maupassant主题的页面调整"></a>8.基于maupassant主题的页面调整</h2><p><strong>我现在使用的主题是maupassant,所以下面的调整都是在这个前提下进行的,基本所有功能默认都集成好了,直接在主题配置文件中启用就行了,因为我比较笨,所以记录一下开启的过程</strong></p><blockquote><ul><li><input checked="" disabled="" type="checkbox"> <ol><li>网页左上角小logo</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="2"><li>标签栏 例如:java  doc Android等的显示</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="3"><li><del>谷歌搜索实现</del></li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="4"><li>本地搜索功能实现,搜索已经存在的文档</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="5"><li>文档页面的美化,统一前端页面,所有的文档尽量除了标题和描述信息以外其他都不展示,避免页面混乱–</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="6"><li>友情链接</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="7"><li>文章初始化时候_日期-时间-标签-目录等的在哪设置:<a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a></li></ol></li><li><input disabled="" type="checkbox"> <ol start="8"><li>文章代码块样式的美化:<a href="https://hexo.io/zh-cn/docs/tag-plugins">https://hexo.io/zh-cn/docs/tag-plugins</a>  </li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="9"><li>启用评论系统</li></ol></li><li><input checked="" disabled="" type="checkbox"> <ol start="10"><li>文字字数和阅读时间显示</li></ol></li><li><input disabled="" type="checkbox"> <ol start="11"><li>目录美化,尽量将目录往右边放,目前是直接出现在正文一开始</li></ol></li></ul></blockquote><h3 id="1-网页左上角小logo的添加"><a href="#1-网页左上角小logo的添加" class="headerlink" title="1. 网页左上角小logo的添加"></a>1. 网页左上角小logo的添加</h3><p>制作一个你需要的logo,命名为<code>favicon.ico</code>,放在<code>\source</code>目录下,然后重新生成以后就好了</p><p><img src="https://i.loli.net/2020/11/21/gjXmZFHLGazQwYh.png" alt="image-20201121172231087"></p><h3 id="2-标签栏设置"><a href="#2-标签栏设置" class="headerlink" title="2. 标签栏设置"></a>2. 标签栏设置</h3><blockquote><p>操作在Markdown文档所在目录执行,即<code>blog\source\_posts</code>目录</p></blockquote><ol><li><h3 id="3-谷歌搜索实现"><a href="#3-谷歌搜索实现" class="headerlink" title="3.谷歌搜索实现"></a>3.谷歌搜索实现</h3></li></ol><h3 id="4-本地搜索"><a href="#4-本地搜索" class="headerlink" title="4.本地搜索"></a>4.本地搜索</h3><p>主题配置文件中<code>self_search</code>标签配置如下:</p><img src="https://i.loli.net/2020/11/22/SFUwtdvm5iyzRM7.png" alt="image-20201122222729500" style="zoom:67%;" /><h3 id="5-主页显示文章的排版整齐-可参见下面7中post的模板"><a href="#5-主页显示文章的排版整齐-可参见下面7中post的模板" class="headerlink" title="5.主页显示文章的排版整齐(可参见下面7中post的模板)"></a>5.主页显示文章的排版整齐(可参见下面7中post的模板)</h3><p>我希望文章的显示效果和我看到的某个大佬的,如下图,避免首页看到每个文章显示有的长有的短,有的还带超链接,主要还是希望看起来整齐一些,这里两种解决办法:</p><ol><li><p>可以在文章的front-matter中(我是在post模板中,看第7项下面我的post里的内容)填写一项<code>description: 你想显示的句子</code>来设置你想显示的摘要，</p></li><li><p>直接在文章内容中插入<!--more-->以隐藏后面的内容,前面的内容就会作为摘要在首页显示。</p><p>若两者都未设置，则自动截取文章第一段作为摘要。</p></li></ol><h3 id="6-友情链接"><a href="#6-友情链接" class="headerlink" title="6.友情链接"></a>6.友情链接</h3><p>在主题配置文件中,有个<code>links</code>标签,在下面按照格式编辑就行.</p><img src="https://i.loli.net/2020/11/22/pgCERI9PoUXYGT4.png" alt="image-20201122190232959" style="zoom:75%;" /><h3 id="7-文章初始化时候的日期时间标签"><a href="#7-文章初始化时候的日期时间标签" class="headerlink" title="7.文章初始化时候的日期时间标签"></a>7.文章初始化时候的日期时间标签</h3><ol><li><p><strong>文章标题</strong>:在正文中直接用—分隔开,或者是在命令中用<code>hexo n 文章标题</code>生成,我发现如果文章命名存在空格的话显示时候存在问题,有的不显示文章正文,具体原因不了解,我把文章标题的空格都用下划线替换了</p></li><li><p><strong>标签</strong>:需要先在主题配置文件中启用<code>widgets</code>中的<code>tag</code>标签(默认已经启用了),然后根目录命令行输入</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> tags</span><br></pre></td></tr></table></figure><p>成功后会提示</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~<span class="regexp">/Documents/</span>blog<span class="regexp">/source/</span>tags/index.md</span><br></pre></td></tr></table></figure></li></ol><p>   然后再在根目录的<code>scaffolds</code>文件夹中编辑<code>post.md</code>文件模板,在文章中添加tag格式需要如下:</p>   <figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- java</span><br><span class="line">- Android</span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>日期</strong>:本身的post模板文件已经包含了日期函数,所以当用<code>hexo n 文章题目</code>生成的文章中默认包含了日期,如果自己手动创建的话那么文章开头至少需要包含<code>title</code>和<code>date</code>两项,</p></li><li><p><strong>目录</strong>:post中使用<code>toc:true</code>实现</p></li><li><p>下面是我post的模板,里面包括了标题,日期,评论,摘要,目录和标签</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;To the time to life, rather than to life in time.&quot;</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="8-代码块美化"><a href="#8-代码块美化" class="headerlink" title="8.代码块美化"></a>8.代码块美化</h3><p>我的代码格式不规范,我基本使用反引号来实现代码功能,所以代码变色没有体现,后面再说吧,这个现在无所谓</p><h3 id="9-评论-使用的Disqus"><a href="#9-评论-使用的Disqus" class="headerlink" title="9.评论-使用的Disqus"></a>9.评论-使用的Disqus</h3><p>在主题配置文件中有<code>Disqus</code>的标签,先到官网<a href="https://disqus.com/">注册登录</a>,然后点击<code>I want to install</code>,在下个页面有个<code>Website Name</code>这个名字一定要记住(其他随便填,提交以后后面的页面没有我们的系统因为本身hexo已经集成了这个评论系统,所以后面的随便填写就ok,或者直接跳过好像也行吧),需要在主题文件的标签后面写上这个名字,比如我写的名字是<code>fenda</code>,所以主题文件里我写的就是fenda,如下图所示,然后post里我配置了<code>comments: true</code>,就是评论默认开启,这样评论系统就可以使用了.</p><p>注册网站中:</p><img src="https://i.loli.net/2020/11/22/sOetU5xGMqPBNng.png" alt="image-20201122222137750" style="zoom:50%;" /><p>主题配置文件中:</p><img src="https://i.loli.net/2020/11/22/KjzeVYEgAp2FoLl.png" alt="image-20201122222244821" style="zoom:80%;" /><p>实现的效果:</p><img src="https://i.loli.net/2020/11/22/kKV6YJ7xPoM3XiR.png" alt="image-20201122222514522" style="zoom: 67%;" /><h3 id="10-文字字数统计"><a href="#10-文字字数统计" class="headerlink" title="10.文字字数统计"></a>10.文字字数统计</h3><p>主题配置文件中,有个<code>wordcount</code>标签,将后面改成<code>true</code>,</p><p><img src="https://i.loli.net/2020/11/22/Thg16UIDENr2mdL.png" alt="image-20201122190418057"></p><p>然后命令行打开切换到博客根目录,执行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>就好了,网上好多推荐busuanzi,我也没用过,有个能用的就行了.效果如下图:</p><img src="https://i.loli.net/2020/11/22/FBEcnhm8utyJSQq.png" alt="image-20201122190730009" style="zoom:80%;" /><h3 id="11-目录美化"><a href="#11-目录美化" class="headerlink" title="11.目录美化"></a>11.目录美化</h3><h2 id="9-需要研究"><a href="#9-需要研究" class="headerlink" title="9.需要研究"></a>9.需要研究</h2><blockquote><p>网上找的一部分,还没细看</p></blockquote><p>常用文件和作用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">base<span class="selector-class">.pug</span>        集成head部分模版+底部</span><br><span class="line">archive<span class="selector-class">.pug</span>        归档页的模版</span><br><span class="line">page<span class="selector-class">.pug</span>        自定义页面的模版</span><br><span class="line">post<span class="selector-class">.pug</span>        文章页模版</span><br><span class="line"><span class="selector-tag">footer</span><span class="selector-class">.pug</span>        尾部文件模版</span><br><span class="line">footer02<span class="selector-class">.pug</span>      底部菜单模版</span><br><span class="line">head<span class="selector-class">.pug</span>        首页的模版（主要是通用JS的引用，如评论，计数器）</span><br><span class="line">_footer文件夹      底部菜单各模版</span><br></pre></td></tr></table></figure><p>详细教程:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">底部菜单栏diy:</span><br><span class="line">    _footer文件夹</span><br><span class="line">    添加:</span><br><span class="line">         在_footer文件夹中新建xxx.pug,写上内容</span><br><span class="line">         在config文件中的footer下 添加进去 -xxx  即可显示</span><br><span class="line">    修改:</span><br><span class="line">        gywo.pug        <span class="comment">##关于我</span></span><br><span class="line">        gzhao.pug       <span class="comment">##公众号或微信二维码</span></span><br><span class="line">        xzhao.pug          <span class="comment">##百度熊掌号相关信息</span></span><br><span class="line">        links.pug          <span class="comment">##友情链接/关于本站/关于博主(简历)</span></span><br><span class="line">友情链接:</span><br><span class="line">    sources<span class="regexp">/href/i</span>ndex.md</span><br><span class="line">关于本站:</span><br><span class="line">    sources<span class="regexp">/site/i</span>ndex.md</span><br><span class="line">关于博主:</span><br><span class="line">    sources<span class="regexp">/about/i</span>ndex.md</span><br><span class="line">留言:</span><br><span class="line">    sources<span class="regexp">/comment/i</span>ndex.md</span><br><span class="line">工具:</span><br><span class="line">    sources<span class="regexp">/tool/i</span>ndex.md</span><br><span class="line">音乐:</span><br><span class="line">    sources<span class="regexp">/music/i</span>ndex.md</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>橙狐使用教程完善版</title>
      <link href="2020/11/20/%E6%A9%99%E7%8B%90%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8BforMI9/"/>
      <url>2020/11/20/%E6%A9%99%E7%8B%90%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8BforMI9/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.coolapk.com/feed/19982456?shareKey=MjE5MmYxZGYxMTcwNWZiNzZkYzE~&shareUid=2110930&shareFrom=com.coolapk.market_10.2.1">橙狐使用教程完善版</a></p><p>橙狐是一个基于twrp源码开发的第三方rec，功能比twrp强大，鉴于上次的橙狐图文我写的不是很清楚加上最近橙狐又更新了官网，所以打算重写一下哼唧</p><a id="more"></a><p>本图文分为以下几部分<br>1、下载<br>2、刷入<br>3、ota（仅miui和魅族M2，一个机型也算支持flyme的ota流汗滑稽）<br>4、橙狐的优点和补充说明</p><p>1、下载<br>首先是橙狐官网： <a href="https://orangefox.download/zh-CN">查看链接</a></p><p><img src="https://i.loli.net/2020/11/22/CkeAby9H3lf5ZpD.png" alt="image-20201122163333373"><br><img src="https://i.loli.net/2020/11/22/eTsHvMPmzuhjIOL.png" alt="image-20201122163358957"></p><p>或者<a href="https://www.coolapk.com/u/KHwang9883">@KHwang9883</a> 看这位老哥的动态，他的<a href="https://github.com/KHwang9883/MobileModels/blob/master/brands/xiaomi.md">github</a> ，有全部小米机型的代号</p><p>因为橙狐官网部分用的小米国际版的机型名字，典型的例子是k20在橙狐官网没有对应机型但是小米9T其实就是k20（类似的例子还有小米A3和小米cc9）</p><p>实在找不到的看我这篇动态：<a href="https://www.coolapk.com/feed/19341940?shareKey=NjRlMTk0ZDBkZmM0NWYwMDI2N2U~&shareUid=3075032&shareFrom=com.coolapk.market_10.4-beta3">查看链接</a><br>蓝奏云 <a href="https://wushidi.lanzous.com/b00nnbn8j">查看链接</a><br>能不能用不能保证（似乎除了小米9pro的不能用以外别的问题不大？<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_59_erha.png" alt="二哈">）没有的告诉我我去搜搜看有没有</p><p>2、刷入<br>官方版本的橙狐只需要在twrp内正常刷入，这也是最推荐的方法，刷完会自动重启rec进入橙狐</p><p>假如你没有twrp或者不想刷twrp的，可以采用两个办法<br>1、手机有root<br>解压卡刷包并提取recovery.img镜像的方法，用镜像助手 <a href="https://wushidi.lanzous.com/icz9xhg">查看链接</a>授予root权限刷入rec，刷完之后会提示重启到rec，请立即重启，防止被覆盖<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_57_dogehechi.png" alt="doge呵斥"><br>2、手机无root<br>解压卡刷包到电脑并提取recovery.img镜像，使用adb命令在fastboot刷入，或者秋之盒 <a href="https://atmb.top/">查看链接</a> 刷入rec，然后手动重启到rec</p><p>以上两种方法都不推荐，因为按照官方说法，这样会导致部分橙狐的插件用不了  </p><p>假如是非官方版本，部分非官方的开发者会提供卡刷包，按照上面说的方法刷就行，而部分开发者只提供了img镜像，这时候你只能通过上面说的镜像助手或者秋之盒刷了<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_33_wulian.png" alt="捂脸">  </p><p>部分人橙狐进去之后默认是英文，需要手动调语言为中文，可以看这张图</p><p><img src="https://i.loli.net/2020/11/22/ZvyXGDtmNaxzYTQ.png" alt="image-20201122163415632"></p><p>然后点进去切成chinese simplified就是简体中文了</p><p><img src="https://i.loli.net/2020/11/22/N2SnLeZ57Ho1C98.png" alt="image-20201122163432493"></p><p>部分橙狐进去之前会有这样的界面</p><p><img src="https://i.loli.net/2020/11/22/VLCfFuTh8Q2nJXm.png" alt="image-20201122163451377"></p><p><img src="https://i.loli.net/2020/11/22/sH5WIe4NKJ26ktj.png" alt="image-20201122163505385"></p><p>打勾滑动即可，不会清除数据  </p><p>橙狐界面预览</p><p><img src="https://i.loli.net/2020/11/22/EJrncBmxZ6wADuP.png" alt="image-20201122163525242"></p><p><img src="https://i.loli.net/2020/11/22/9FAMw7lQRgr5E1h.png" alt="image-20201122163542446"></p><p><img src="https://i.loli.net/2020/11/22/TRwed17DbOaEqit.png" alt="image-20201122163551573"></p><p><img src="https://i.loli.net/2020/11/22/8iBdUHtmQ7j1Kb9.png" alt="image-20201122163602778"></p><p><img src="https://i.loli.net/2020/11/22/biLEFas7cJv9R42.png" alt="image-20201122163611423"></p><p><img src="https://i.loli.net/2020/11/22/t9zjEp78X1kgGfR.png" alt="image-20201122163730829"></p><p>其中magisk manager有点类似残血版mm管理器（没有模块备份功能），假如检测出你没有刷magisk会提示你是否刷入</p><p><img src="https://i.loli.net/2020/11/22/zInDybjgfNplSt1.png" alt="image-20201122163718146"></p><p><img src="https://i.loli.net/2020/11/22/4VtMcusKyX1zron.png" alt="image-20201122163705951"></p><p>橙狐格式化data在菜单-分区管理-data-格式化data</p><p><img src="https://i.loli.net/2020/11/22/3DPTXmnc5qMpRF4.png" alt="image-20201122163645873"></p><p>3、ota功能<br>官网的教程 <a href="https://wiki.orangefox.tech/en/guides/ota">查看链接</a><br>由于魅族只有一个m2，就不谈魅族了，方法应该一样<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_63_liuhanhuaji.png" alt="流汗滑稽"><br>对于miui，你需要下载当前系统完整包（一定要是当前系统或者更加新的系统），获取途径推荐采用 <a href="http://www.coolapk.com/apk/cn.iqianye.miui.update" title="MIUI 完整包获取">【MIUI 完整包获取】</a> 获取后把链接复制到浏览器下载<br>当然直接下也可以，在系统更新界面下载完整包，等待进度条动了，点下进度条，停止下载，然后进下载管理里继续下载（这一步是为了防止包被miui解密），假如你不知道下载管理在哪那可以去自带浏览器的下载也一样  </p><p>现在你已经获得了miui完整包，使用 <a href="http://www.coolapk.com/apk/cn.iqianye.miui.update" title="MIUI 完整包获取">【MIUI 完整包获取】</a> 获取的完整包应该在sdcard/download文件夹下，系统更新下载的在sdcard/miui_rom 文件夹下（假如没有改过默认设置），然后确认手机里有你当前的面具版本对应的面具包，没有的去github下 <a href="https://github.com/topjohnwu/Magisk/releases">查看链接</a><br>，当然假如你还没有root的最好也准备一下面具包  </p><p>现在重启到rec，选择菜单-右上角设置-miui ota，打开开关，除了禁用dm检验以外全部打勾（官方文档是这么说的，虽然我小米9开了禁用dm好像没事？还是建议关了<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_1020_biaomiankaixin.png" alt="表面开心">），然后回到主页，选择并刷入miui完整包，路径上文提到了,一般橙狐默认是主目录，即download文件夹或者miui_rom文件夹，刷机包检验和自动重启不勾选（保持默认），刷完包，不要重启，马上找到刚刚准备的面具包刷下（防止橙狐和面具被覆盖，有没有root都需要），然后进ota界面就可以看到，您已准备好接受更新</p><p><img src="https://i.loli.net/2020/11/22/sEbnid6Zf9ajx47.png" alt="image-20201122163634842"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 安卓 </tag>
            
            <tag> 橙狐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/19/hello-world/"/>
      <url>2020/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> md </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
